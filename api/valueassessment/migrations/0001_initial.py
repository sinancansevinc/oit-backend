# Generated by Django 4.2.3 on 2023-08-21 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ValueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('proficiency', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ValueAssessmentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveBigIntegerField()),
                ('value_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='valueassessment.valueitem')),
            ],
        ),
        migrations.CreateModel(
            name='ValueAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('approved', 'Approved')], default='created', max_length=10)),
                ('type', models.CharField(choices=[('manager', 'Manager'), ('employee', 'Employee'), ('manager_peer', 'Manager Peer'), ('employee_peer', 'Employee Peer')], default='manager', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='valueassessment_assigned_employee', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='valueassessment_created_by', to=settings.AUTH_USER_MODEL)),
                ('target_employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='valueassessment_target_employee', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='valueassessment_updated_by', to=settings.AUTH_USER_MODEL)),
                ('value_assessment_items', models.ManyToManyField(to='valueassessment.valueassessmentitem')),
            ],
            options={
                'permissions': (('can_access_all_valueassessment', 'can access all value assessment'),),
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('assignment_date', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('individual', 'Individual'), ('manager', 'Manager')], default='individual', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='value_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='value_update_by', to=settings.AUTH_USER_MODEL)),
                ('value_items', models.ManyToManyField(to='valueassessment.valueitem')),
            ],
            options={
                'permissions': (('can_access_all_value', 'can access all value'),),
            },
        ),
        migrations.AddConstraint(
            model_name='value',
            constraint=models.UniqueConstraint(fields=('assignment_date', 'role'), name='unique_role_year'),
        ),
    ]
